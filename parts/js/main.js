// Generated by CoffeeScript 1.7.1
(function() {
  var backlog, draw, draw_data, draw_hl_fade, fill, focus, font_scale, h, layout, svg, tag_highlight, tag_links, tag_links_box, tags, vis, vis_bg, vis_box, w, _ref;

  tags = d3.entries(ffhome_tags).sort(function(a, b) {
    return b.value - a.value;
  });

  fill = d3.scale.category20();

  vis_box = d3.select('#vis');

  _ref = [vis_box.node().clientWidth, vis_box.node().clientHeight], w = _ref[0], h = _ref[1];

  console.assert(h > 100 && w > 100, [w, h]);

  svg = vis_box.append('svg').attr('width', w).attr('height', h);

  vis_bg = svg.append('g');

  vis = svg.append('g').attr('transform', 'translate(' + [w >> 1, h >> 1] + ')');

  font_scale = vis_box.style('font-size');

  console.assert(font_scale.match(/px$/), font_scale);

  font_scale = parseInt(font_scale);

  font_scale = [font_scale, font_scale * 3];

  font_scale = d3.scale['linear']().range(font_scale);

  font_scale.domain([+tags[tags.length - 1].value || 1, +tags[0].value]);

  tag_links = ffhome_tag_links;

  tag_links_box = d3.select('#tag-links');

  tag_highlight = null;

  draw_data = null;

  draw_hl_fade = function(selection) {
    var hl_check;
    console.assert((selection != null) || draw_data);
    hl_check = function(d) {
      return !tag_highlight || d.text === tag_highlight;
    };
    if (selection == null) {
      selection = vis.selectAll('text').data(draw_data, function(d) {
        return d.text;
      });
    }
    return selection.transition().duration(1000).style('opacity', function(d) {
      if (hl_check(d)) {
        return 1;
      } else {
        return 0.2;
      }
    });
  };

  draw = function(data, bounds) {
    var exit_group, exit_group_node, scale, text, text_transition;
    scale = bounds ? Math.min(w / Math.abs(bounds[0].x - w / 2), w / Math.abs(bounds[1].x - w / 2), h / Math.abs(bounds[0].y - h / 2), h / Math.abs(bounds[1].y - h / 2)) / 2 : 1;
    draw_data = data;
    text = vis.selectAll('text').data(data, function(d) {
      return d.text;
    });
    text_transition = text.transition().duration(1000).attr('transform', function(d) {
      return 'translate(' + [d.x, d.y] + ')rotate(' + d.rotate + ')';
    }).style('font-size', function(d) {
      return d.size + 'px';
    });
    draw_hl_fade(text_transition);
    text_transition = text.enter().append('text').attr('text-anchor', 'middle').attr('transform', function(d) {
      return 'translate(' + [d.x, d.y] + ')rotate(' + d.rotate + ')';
    }).style('font-size', function(d) {
      return d.size + 'px';
    }).on('click', function(d) {
      return focus(d);
    }).style('opacity', 1e-6);
    draw_hl_fade(text_transition);
    text.style('font-family', function(d) {
      return d.font;
    }).style('fill', function(d) {
      return fill(d.text.toLowerCase());
    }).text(function(d) {
      return d.text;
    });
    exit_group = vis_bg.append('g').attr('transform', vis.attr('transform'));
    exit_group_node = exit_group.node();
    text.exit().each(function() {
      return exit_group_node.appendChild(this);
    });
    exit_group.transition().duration(1000).style('opacity', 1e-6).remove();
    return vis.transition().delay(250).duration(750).attr('transform', 'translate(' + [w >> 1, h >> 1] + ')scale(' + scale + ')');
  };

  layout = d3.layout.cloud().size([w, h]).spiral('archimedean').font('Impact').fontSize(function(d) {
    return font_scale(d.value);
  }).timeInterval(Infinity).words(tags).text(function(d) {
    return d.key;
  }).on('end', draw).start();

  d3.select('#vis-shuffle').on('click', function(d) {
    draw_data = null;
    return layout.stop().start();
  });

  focus = function(tag) {
    var links;
    tag_highlight = tag.key;
    draw_hl_fade();
    links = tag_links_box.select('ul').selectAll('li').data(tag_links[tag.key], function(d, i) {
      return d.url;
    });
    links.enter().append('li').append('a').attr('href', function(d) {
      return d.url;
    }).text(function(d) {
      return d.title || d.url;
    });
    links.exit().remove();
    return tag_links_box.style('display', 'block');
  };

  if ((typeof ffhome_links !== "undefined" && ffhome_links !== null) && ffhome_links.length) {
    backlog = d3.select('#backlog');
    backlog.select('ul').selectAll('li').data(ffhome_links).enter().append('li').append('a').attr('href', function(d) {
      return d.url;
    }).text(function(d) {
      return d.title || d.url;
    });
    backlog.style('display', 'block');
  }

}).call(this);
